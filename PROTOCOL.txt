>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>> API ЛК Партнеров и Дилеров 1.0.0                                                             >>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>> Преамбула                                                                  >>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

1) В случае исключительной ошибочной ситуации, надо выставлять статус 500 и возвращать объект следующго вида
{
  status: [string],           // код ошибки
  result_msg: [string]       // описание ошибки
}
В случае стандартного отрицательного ответа - выставлять статус 200
--------------------------------------------------------------------
2)Тестовые Инстансы

  https://localhost:3000
  https://172.16.3.61:3000

--------------------------------------------------------------------

Получить пользователя
GET /api/users/login
Параметры: 
{
    "email" = "строка" 
    "pass" = "hash"
}
Возвращаемое значение в случае ошибки:
{
    "email" = "строка"
    "pass" = "строка"
    "result" = ERROR_CODE  // (число, 0 - успешная регистрация, нет ошибок, другие еще определим)
    "result_msg" = "строка" // Описание кода ошибки - успех, неверный логин и т.п.
}
--------------------------------------------------------------------

Войти в систему:
POST /api/users/register
Возвращаемое значение в случае успеха:
{
    "email"  = "строка" // - проверять валидность при вводе
    "pass" = "строка пароля" // пока в открытом виде, нужно для локальных проверок, потом выключим, необязательный параметр
    "company_name"  = "строка" 
    "company_inn" = "строка" // (при вводе проверка (проверять валидность при входе, только цифры)
    "account_info" = "строка" // контактные данные новой учетной записи, ФИО, необязательный параметр
    "account_phone" = "строка" // телефон новой учетной записи, необязательный параметр
    "contact_person" = "строка" // контактное лицо
    "date": {
	type: "тип Data"
     }
}
В случае ошибки:
{
    "result" = ERROR_CODE // (число, 0 - успешная регистрация, нет ошибок, другие еще определим)
    "result_msg" = "строка" // Описание кода ошибки - успех, что-то пошло не так и т.п.
}

--------------------------------------------------------------------

Получить пользователя:
GET /api/users/login

Возвращаемое значение:
{
    "email": "строка"
    "pass": "строка"
    "result" = ERROR_CODE  // (число, 0 - успешная регистрация, нет ошибок, другие еще определим)
    "result_msg" = "строка" // Описание кода ошибки - успех, неверный логин и т.п.
}

----------------------------------------------------------------------

Проверить, авторизован ли пользователь
GET /api/users/login
Возвращаемое значение:

В случае успеха:
{
    status: 'success'         // Успех
}

В случае ошибки:
{
    status: 'error'           // Ошибка
}

----------------------------------------------------------------------

Выйти из системы:
POST /api/users/login
Возвращаемое значение:

В случае успеха:
{
    status: 'success'          // Успех
}
В случае ошибки:
{
    status: 'error'            // Ошибка
}

----------------------------------------------------------------------
